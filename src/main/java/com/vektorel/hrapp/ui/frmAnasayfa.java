/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vektorel.hrapp.ui;

import com.vektorel.hrapp.entity.Kullanici;
import javax.swing.JOptionPane;

/**
 *
 * @author vektorel
 */
public class frmAnasayfa extends javax.swing.JFrame {

    /**
     * Creates new form frmAnasayfa
     */
    public frmAnasayfa(Kullanici kullanici) {
        try {
            initComponents();
            setExtendedState(this.MAXIMIZED_BOTH);

            //setUndecorated(true);
            setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        treeMenu = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("İnsan Kaynakları");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Tanımlar");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Kullanıcı Ekle");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("İl Ekle");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("İlçe Ekle");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Kişi Ekle");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Bölüm Ekle");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Departman Ekle");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Okul Ekle");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Başvuru İşlemleri");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cv");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cv Listesi");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("İş Başvurusu");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeMenu.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMenuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(treeMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 440, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void treeMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMenuMouseClicked

        String menu = treeMenu.getLastSelectedPathComponent().toString();

        if (menu.equals("Kullanıcı Ekle")) {
            frmKullaniciEkle kullaniciEkle = new frmKullaniciEkle(null, true);
            kullaniciEkle.show();
            kullaniciEkle.setLocationRelativeTo(null);
        }

        if (menu.equals("İl Ekle")) {
            try {
                frmIlEkle ilEkle = new frmIlEkle(null, true);
                ilEkle.show();
                ilEkle.setLocationRelativeTo(null);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            }

        }
        if (menu.equals("İlçe Ekle")) {
            try {
                frmIlceEkle ilceEkle = new frmIlceEkle(null, true);
                ilceEkle.show();
                ilceEkle.setLocationRelativeTo(null);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            }

        }

        if (menu.equals("Kişi Ekle")) {
            frmKisiEkle kisiEkle = new frmKisiEkle(null, true);
            kisiEkle.show();
            kisiEkle.setLocationRelativeTo(null);
        }
        if (menu.equals("Bölüm Ekle")) {
            frmBolumEkle bolumEkle = new frmBolumEkle(null, true);
            bolumEkle.show();
            bolumEkle.setLocationRelativeTo(null);
        }
        if (menu.equals("Departman Ekle")) {
            frmDepartmanEkle departmanEkle = new frmDepartmanEkle(null, true);
            departmanEkle.show();
            departmanEkle.setLocationRelativeTo(null);
        }
        if (menu.equals("Okul Ekle")) {
            frmOkulEkle okulEkle = new frmOkulEkle(null, true);
            okulEkle.show();
            okulEkle.setLocationRelativeTo(null);
        }

        if (menu.equals("Cv")) {
            frmCv cv = new frmCv();
            cv.show();
            cv.setLocationRelativeTo(null);
        }
        if (menu.equals("Cv Listesi")) {
            frmCvListesi cvListesi = new frmCvListesi();
            cvListesi.show();
            cvListesi.setLocationRelativeTo(null);
        }
        if (menu.equals("İş Başvurusu")) {
            frmIsBasvuru isBasvuru = new frmIsBasvuru();
            isBasvuru.show();
            isBasvuru.setLocationRelativeTo(null);
        }

    }//GEN-LAST:event_treeMenuMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree treeMenu;
    // End of variables declaration//GEN-END:variables
}
